// <auto-generated />
using System;
using ExchangeAPITest.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExchangeAPITest.Migrations
{
    [DbContext(typeof(ExchangeDb))]
    [Migration("20230627020807_ExchangeMigration")]
    partial class ExchangeMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExchangeAPITest.Modelss.CurrencyResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sucess")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimesTamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Currencys");
                });

            modelBuilder.Entity("ExchangeAPITest.Modelss.Entitys.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CurrencyResponseId")
                        .HasColumnType("int");

                    b.Property<string>("Simbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyResponseId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("ExchangeAPITest.Modelss.Entitys.Currency", b =>
                {
                    b.HasOne("ExchangeAPITest.Modelss.CurrencyResponse", null)
                        .WithMany("Rates")
                        .HasForeignKey("CurrencyResponseId");
                });

            modelBuilder.Entity("ExchangeAPITest.Modelss.CurrencyResponse", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
